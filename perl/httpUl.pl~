#!/usr/bin/perl -w
use strict;
use warnings;
use 5.012;
use CGI;
use URI::Escape;
#use Capture::Tiny ':all';
use Carp; 
my $cgi = new CGI;
use utf8; 
use HTML::Entities;
#use Capture::Tiny 'capture_merged';
print "Content-Type: text/html \n\n";  
  use CGI::Carp qw(fatalsToBrowser); 
use IO::Socket::INET;

#Create our object and initialises the CGI creates a layer of abstraction transmission / reception to contact our customer package Ajax;       

# Ajax Class  

use constant false => 0;
use constant true  => 1;

my $param = $cgi->{param};
my $lab = $cgi->param('lab');

my $OptionH1 = $cgi->param('OptionH1');
my $OptionH1Text = $cgi->param('OptionH1Text');

my $OptionH2 = $cgi->param('OptionH2');
my $OptionH2Text = $cgi->param('OptionH2Text');

my $OptionChemin = $cgi->param('OptionChemin');
my $OptionCheminText = $cgi->param('OptionCheminText');

my $OptionM1 = $cgi->param('OptionM1');

my $OptionM100 = $cgi->param('OptionM100');

my $OptionG1 = $cgi->param('OptionG1');

my $Optionother = $cgi->param('Optionother');
my $file = $cgi->param('file');

my $Interface = $cgi->param('Interface');

my $value;
my $Options ;
my $size=0;

$Options = "wget -T 5 --post-file=\"/opt/lampp/htdocs/Stage2/Ul/";

if ($OptionH1 eq 'true') 
{
$Options = $Options . " --http-user=$OptionH1Text";
}

if ($OptionH2 eq 'true') 
{
$Options = $Options . " --http-password=$OptionH2Text";
}

if ($OptionM1 eq 'true') 
{
$Options = $Options . "1M\"";
}

if ($OptionM100 eq 'true') 
{
$Options = $Options . "100M\"";
}

if ($OptionG1 eq 'true') 
{
$Options = $Options . "1G\"";
}

if ($Optionother eq 'true') 
{
$Options = $Options . "$file\"";
}
if ($OptionChemin eq 'true') 
{
$Options = $Options . ' "' . "$lab$OptionCheminText" . 'm"' . " 2";
}
else
{
$Options = $Options . ' "' . "$lab" . 'm"' . " 2";
}




$Options = $Options . ' "' . "$lab" . 'm"' . " 2";

my $socket;
my $serverdata;
my $clientdata;

$socket = new IO::Socket::INET (
  PeerHost => '127.0.0.1',
  PeerPort => '0160',
  Proto => 'tcp',
) or die "$!\n";


my $var = "";



# Send some message to server.
print $socket "$Options";
shutdown($socket, 1);



$var = <$socket>; 
       



$socket->close();
my $filename = '/opt/lampp/htdocs/Stage/resultats/tmp';
open(my $fh, '<:encoding(UTF-8)', $filename)
  or die "Could not open file '$filename' $!";
while (my $row = <$fh>) {
  chomp $row;
  print "$row\n";
}


$cgi->header('text/plain;charset=UTF-8');


