#!/usr/bin/perl -w
use strict;
use warnings;
use 5.012;
use CGI;
use URI::Escape;
#use Capture::Tiny ':all';
use Carp; 
my $cgi = new CGI;

use utf8; 
use HTML::Entities;
#use Capture::Tiny 'capture_merged';
print "Content-Type: text/html \n\n";  
  use CGI::Carp qw(fatalsToBrowser); 
use IO::Socket::INET;

#Create our object and initialises the CGI creates a layer of abstraction transmission / reception to contact our customer package Ajax;       

# Ajax Class  

my $param = $cgi->{param};
my $Interface = $cgi->param('Interface');
my $size;


my $socket;
my $serverdata;
my $clientdata;

$socket = new IO::Socket::INET (
  PeerHost => '127.0.0.1',
  PeerPort => '0168',
  Proto => 'tcp',
) or die "$!\n";


my $var = "";

my $Options = "ifstat -i $Interface 0.1 1";

# Send some message to server.
print $socket "$Options";
shutdown($socket, 1);



$var = <$socket>; 
       



$socket->close();
my $line;
my $filename = '/opt/lampp/htdocs/Stage/resultats/tmp2';
open(my $fh, '<:encoding(UTF-8)', $filename)
  or die "Could not open file '$filename' $!";
while (my $row = <$fh>) {
  chomp $row;
  $line = $row;
}

print $line;
$cgi->header('text/plain;charset=UTF-8');



